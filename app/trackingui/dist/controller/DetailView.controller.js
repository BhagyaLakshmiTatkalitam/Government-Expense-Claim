sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/model/json/JSONModel","sap/ui/model/Filter","sap/ui/model/FilterOperator"],(e,t,o,a)=>{"use strict";return e.extend("com.cy.track.trackingui.controller.DetailView",{onInit(){this.getOwnerComponent().getRouter().getRoute("RouteDetailView").attachPatternMatched(this._ExpenseDetailMatched,this)},_ExpenseDetailMatched:function(){this.getOwnerComponent().getModel("ExpenseClaimModel").setProperty("/employeeName","Bhagya lakshmi")},onAdd:function(){const e=this.getView().getModel("ExpenseClaimModel");const t=e.getProperty("/localEmployees")||[];t.push({employeeID:"",employeeName:"",status:"",payGrade:"",action:""});e.setProperty("/localEmployees",t);e.updateBindings(true)},onEmployeeIdSelected:function(e){const t=e.getParameter("selectedItem");if(!t)return;const s=t.getText();const l=e.getSource();const n=l.getBindingContext("ExpenseClaimModel");const i=this.getView();const r=i.getModel();const m=i.getModel("ExpenseClaimModel");const c=new o("employeeID",a.EQ,s);const p=r.bindList("/Employees",undefined,[],[c]);p.requestContexts(0,1).then(e=>{if(!e.length){console.error("No employee found with ID:",s);return}const t=e[0].getObject();if(!n||!n.getPath()){console.error("Row context is missing. Cannot update local row.");return}const o=n.getPath();const a=o.split("/").pop();const l=parseInt(a,10);if(isNaN(l)){console.error("Invalid row index extracted from path:",o);return}const i=m.getProperty("/localEmployees");if(i[l]){i[l]={employeeID:t.employeeID,employeeName:t.employeeName,status:t.status,payGrade:t.payGrade,action:t.action};m.setProperty("/localEmployees",i);m.updateBindings(true)}}).catch(e=>{console.error("Error while filtering Employees by employeeID:",e)})},onEmployeeIdSubmit:function(e){const t=e.getSource().getValue();const s=this.getView();const l=s.getModel();if(!t){sap.m.MessageToast.show("Please enter an Employee ID.");return}const n=new o("employeeID",a.EQ,t);const i=l.bindList("/Employees",undefined,undefined,[n]);i.requestContexts(0,1).then(e=>{if(e.length===0){sap.m.MessageBox.error("Employee not found.");s.byId("employeeName").setValue("");return}const t=e[0].getObject();s.byId("employeeName").setValue(t.employeeName)}).catch(e=>{console.error("Error fetching employee:",e);sap.m.MessageBox.error("Error while searching employee.")})},onClearEmployeeName:function(){this.getView().byId("employeeName").setValue("")},onClaimTypeSelected:function(e){const t=e.getParameter("selectedItem");const s=t?t.getText():null;if(!s){return}const l=this.getView();const n=l.getModel();const i=new o("claimType",a.EQ,s);const r=n.bindList("/ClaimDetails",undefined,undefined,[i]);r.requestContexts(0,1).then(e=>{if(e.length===0){sap.m.MessageBox.error("Claim details not found.");l.byId("claimCategory").setValue("");l.byId("claimFees").setValue("");l.byId("validityDate").setDateValue(null);return}const t=e[0].getObject();l.byId("claimCategory").setValue(t.claimCategory);l.byId("claimFees").setValue(t.claimFees);l.byId("validityDate").setDateValue(new Date(t.procedureValidityDate))}).catch(e=>{console.error("Error fetching claim details:",e);sap.m.MessageBox.error("Error while retrieving claim details.")})},onCalculate:function(){const e=this.getView();const t=e.getModel("ExpenseClaimModel");const o=e.byId("claimType");const a=o.getSelectedItem()?o.getSelectedItem().getText():"";const s=e.byId("claimFees");const l=s.getValue();const n=parseFloat(l)||0;const i=t.getProperty("/localEmployees")||[];const r=i.filter(e=>e.employeeID&&e.employeeID.trim()!=="").length;const m=n*r;if(!a){sap.m.MessageBox.error("Please select a Claim Type first.");return}if(n<=0){sap.m.MessageBox.error("Please enter valid Claim Fees.");return}if(r===0){sap.m.MessageBox.error("Please add at least one employee with valid Employee ID.");return}const c={claimType:a,empCount:r,amount:m.toFixed(2)};t.setProperty("/claimSummary",[c]);t.updateBindings(true);sap.m.MessageToast.show(`Calculation completed: ${r} employees, Total: ${m.toFixed(2)}`)},onSubmit:async function(){const e=this.getView();const t=e.getModel();const o=this.getView().getModel("ExpenseClaimModel");let a=new Date(e.byId("validityDate").getDateValue());let s=new Intl.DateTimeFormat("en-CA").format(a);const l=e.byId("employee").getValue();const n=e.byId("employee2").getValue();const i=e.byId("employee1").getValue();const r=o.getProperty("/localEmployees")||[];const m=o.getProperty("/claimSummary")||[];if(!sEmployeeID||!sClaimType||!sClaimCategory||!fClaimFees||!s){sap.m.MessageBox.warning("Please fill all required fields.");return}const c={requesterID:sEmployeeID,requesterName:sEmployeeName,claimType:sClaimType,claimCategory:sClaimCategory,claimFees:fClaimFees,procedureValidityDate:s,totalAmount:m[0]?.amount||0,noOfEmployees:m[0]?.empCount||r.length,status:"Submitted"};try{const e=t.bindList("/Claims");const o=await e.create(c).requestObject();const a=o.claimID;const s=t.bindList("/Remarks");await s.create({claim_claimID:a,managerRemarks:l,managerManagerRemarks:n,financeRemarks:i}).requestObject();for(let e of r){const o=t.bindList("/EmployeesDetails");await o.create({claim_claimID:a,employeeIDDetail:e.employeeID,employeeNameDetail:e.employeeName,statusDetail:e.status,payGradeDetail:e.payGrade,actionDetail:e.action}).requestObject()}sap.m.MessageToast.show("Claim submitted successfully.");this.getView().getModel().refresh();const m=sap.ui.core.UIComponent.getRouterFor(this);m.navTo("RouteHomeView")}catch(e){console.error("Submission failed:",e);sap.m.MessageBox.error("Failed to submit claim. Please try again.")}}})});
//# sourceMappingURL=DetailView.controller.js.map