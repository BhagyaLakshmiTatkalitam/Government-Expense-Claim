sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/model/json/JSONModel","sap/ui/model/Filter","sap/ui/model/FilterOperator"],(e,t,o,n)=>{"use strict";return e.extend("com.cy.track.trackingui.controller.DetailView",{onInit(){this.getOwnerComponent().getRouter().getRoute("RouteDetailView").attachPatternMatched(this._ExpenseDetailMatched,this)},_ExpenseDetailMatched:function(){this.getOwnerComponent().getModel("ExpenseClaimModel").setProperty("/employeeName","Bhagya lakshmi")},onAdd:function(){const e=this.getView().getModel("ExpenseClaimModel");const t=e.getProperty("/localEmployees")||[];t.push({employeeID:"",employeeName:"",status:"",payGrade:"",action:""});e.setProperty("/localEmployees",t);e.updateBindings(true)},onEmployeeIdSelected:function(e){const t=e.getParameter("selectedItem");if(!t)return;const s=t.getText();const a=e.getSource();const l=a.getBindingContext("ExpenseClaimModel");const r=this.getView();const i=r.getModel();const c=r.getModel("ExpenseClaimModel");const m=new o("employeeID",n.EQ,s);const d=i.bindList("/Employees",undefined,[],[m]);d.requestContexts(0,1).then(e=>{if(!e.length){console.error("No employee found with ID:",s);return}const t=e[0].getObject();if(!l||!l.getPath()){console.error("Row context is missing. Cannot update local row.");return}const o=l.getPath();const n=o.split("/").pop();const a=parseInt(n,10);if(isNaN(a)){console.error("Invalid row index extracted from path:",o);return}const r=c.getProperty("/localEmployees");if(r[a]){r[a]={employeeID:t.employeeID,employeeName:t.employeeName,status:t.status,payGrade:t.payGrade,action:t.action};c.setProperty("/localEmployees",r);c.updateBindings(true)}}).catch(e=>{console.error("Error while filtering Employees by employeeID:",e)})},onEmployeeIdSubmit:function(e){const t=e.getSource().getValue();const s=this.getView();const a=s.getModel();if(!t){sap.m.MessageToast.show("Please enter an Employee ID.");return}const l=new o("employeeID",n.EQ,t);const r=a.bindList("/Employees",undefined,undefined,[l]);r.requestContexts(0,1).then(e=>{if(e.length===0){sap.m.MessageBox.error("Employee not found.");s.byId("employeeName").setValue("");return}const t=e[0].getObject();s.byId("employeeName").setValue(t.employeeName)}).catch(e=>{console.error("Error fetching employee:",e);sap.m.MessageBox.error("Error while searching employee.")})},onClearEmployeeName:function(){this.getView().byId("employeeName").setValue("")},onClaimTypeSelected:function(e){const t=e.getParameter("selectedItem");const s=t?t.getText():null;if(!s){return}const a=this.getView();const l=a.getModel();const r=new o("claimType",n.EQ,s);const i=l.bindList("/ClaimDetails",undefined,undefined,[r]);i.requestContexts(0,1).then(e=>{if(e.length===0){sap.m.MessageBox.error("Claim details not found.");a.byId("claimCategory").setValue("");a.byId("claimFees").setValue("");a.byId("validityDate").setDateValue(null);return}const t=e[0].getObject();a.byId("claimCategory").setValue(t.claimCategory);a.byId("claimFees").setValue(t.claimFees);a.byId("validityDate").setDateValue(new Date(t.procedureValidityDate))}).catch(e=>{console.error("Error fetching claim details:",e);sap.m.MessageBox.error("Error while retrieving claim details.")})}})});
//# sourceMappingURL=DetailView.controller.js.map